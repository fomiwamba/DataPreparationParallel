;Sequenz basiert auf "CNT-SUS-Daten umbenennen skalieren.seq" und wurde durch F. Bruckmüller Ende November 2020 angepasst.
;ein separates Erzeugen der Amplitudenspektren ist nicht erforderlich, da das am Ende dieser Sequenz gemacht wird.

;CNT-SÜS-Daten, gemessen mit IMC-CRONOS über separates Devices-Experiment
;64 Kanäle von RCS- und RCP-Objekt
;1. Pfad anpassen (s.u.) zum Laden aller Roh-Daten / Einzel-Kanäle (z.B. "Channel_01 (01).RAW"...) des aktuellen Datenpakets
;2. Gruppenname anpassen (s.u.) zum Zusammenfassen/Gruppieren (z.B. "CNT_SUS_200928")
;3. Sequenz im zugehörigen \Auswert -Verzeichnis speichern und laufen lassen (am Ende nochmals speichern!).

;ACHTUNG: Sequenz nicht mehrfach über RAW-Datensatz laufen lassen, da sonst mehrfach skaliert wird!!!

;Start:

entf *


; <<<<< Anzupassende bzw. zu überprüfende Variablen >>>>>
_Convert_to_displacement = 0 ;Umwandeln der Beschleunigungs-/Geschwindigkeits-Signale zu Weg-Signale durch Integration und Abschneiden Einschwingzeit von ca. 5 sec

;assetfolder_ = "D:\Projekte\CNT_RCP" ; OHNE abschließenden \
;Idx = PnGetSelectedItem("AssetFolderList")
;assetfolder = PnGetItemText("AssetFolderList",Idx)

assetfolder = "D:\Projekte\CNT_SUES"

wenn txwo(assetfolder,"CNT") <> 0

	;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	; GET LIST OF ALREADY PROCESSED FOLDERS
	;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	ProcessedFolders = TxArrayCreate(0)
	FileNameList_file = assetfolder +"\"+"ImportedRawFolders.txt"; 
	if FsFileExists(FileNameList_file)
		_fhxx = FileOpenASCII(FileNameList_file,0)
		if _fhxx > 0
			_TxZeile = ""
			_ok = 0
			_count = 1
		
			solange _ok = 0
				_ok = FileLineRead( _fhxx, _TxZeile, 0 )
				if _ok = 0
					ProcessedFolders[_count] = _TxZeile
				ende
				_count = _count + 1
			ende
			FileClose(_fhxx)
		ende
	ende


	;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	; GET LIST OF UNPROCESSED FOLDERS
	;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	raw_data_main_folder = assetfolder + "\RawFiles\"
	_folder_list = FsGetFileNames(raw_data_main_folder,"",1,0,1)
	raw_folder_list = TxArrayCreate(0)
	_anz_folders = TxArrayGetSize(_folder_list)
	count = 0
	for i = 1 to _anz_folders
		_folderi = _folder_list[i]
		raw_folder_ = FsGetFileNames(_folderi,"",1,0,1)
		raw_folder_i = raw_folder_[1]
		erg_find = 0
		for _k = 1 to TxArrayGetSize(ProcessedFolders)
			if tcomp(ProcessedFolders[_k],raw_folder_i) = 0
				erg_find = 1;TxFind(,raw_folder_i,-1,1)
				break
			else
				erg_find = 0
			ende
		end
		if TxArrayGetSize(raw_folder_) >= 1 and erg_find = 0
			count = count + 1
			raw_folder_list[count] = raw_folder_i
		ende
	ende


	;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	; PROCESS LIST OF IDENTIFIED UNPROCESSED FOLDERS
	;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	_anz_raw_folders = TxArrayGetSize(raw_folder_list)
	for folderi = 1 to _anz_raw_folders
		file_ratio = floor(folderi/_anz_raw_folders*100) 
		seteinheit(file_ratio,"%",1)
		zeigen file_ratio
	
	
		raw_data_folder = raw_folder_list[folderi]
		;"D:\Projekte\CNT_RCP\RawFiles\20200123\2020-01-23 12-48-59 (1)" ; OHNE abschließenden \; Alternativ zusammenbauen mit: _Path_root + "\20200928\2020-09-28 11-14-41 (1)\"


		; Gruppe mit o.g. Namen erzeugen und Kanäle einfügen
		_GroupName = "Data"
		<_GroupName> = GrNeu()
	
	
		; GET CHANNEL NAMES
		_file_list = FsGetFileNames(raw_data_folder,"",0,1,1)
		_anz_file = TxArrayGetSize(_file_list)
		for i = 1 to _anz_file
			_filei = _file_list[i]
			_erg = FileLoad ( _filei, "imc/FAMOS", 0 )
			anzahl = VarGetInit2( "Channel_*",0)
			chname = VarGetName?(anzahl)
			GrKanalAdd( <_GroupName>, <chname>)
		ende

		;Kanalnamen umbenennen (Kan. 40 u. 52 nicht belegt)
		rename {<_GroupName>}:Channel_01 A1
		rename {<_GroupName>}:Channel_02 A2
		rename {<_GroupName>}:Channel_03 A3
		rename {<_GroupName>}:Channel_04 A4
		rename {<_GroupName>}:Channel_05 R1D
		rename {<_GroupName>}:Channel_06 R1R
		rename {<_GroupName>}:Channel_07 R2D
		rename {<_GroupName>}:Channel_08 R2R
		rename {<_GroupName>}:Channel_09 R3D
		rename {<_GroupName>}:Channel_10 R3R
		rename {<_GroupName>}:Channel_11 R1V
		rename {<_GroupName>}:Channel_12 R1H
		rename {<_GroupName>}:Channel_13 R2V
		rename {<_GroupName>}:Channel_14 R2H
		rename {<_GroupName>}:Channel_15 R3V
		rename {<_GroupName>}:Channel_16 R3H
		rename {<_GroupName>}:Channel_17 P1E
		rename {<_GroupName>}:Channel_18 P2E
		rename {<_GroupName>}:Channel_19 P3E
		rename {<_GroupName>}:Channel_20 P3A
		rename {<_GroupName>}:Channel_21 X1O
		rename {<_GroupName>}:Channel_22 X1U
		rename {<_GroupName>}:Channel_23 X2O
		rename {<_GroupName>}:Channel_24 X2U
		rename {<_GroupName>}:Channel_25 X3O
		rename {<_GroupName>}:Channel_26 X3U
		rename {<_GroupName>}:Channel_27 X4O
		rename {<_GroupName>}:Channel_28 X4U
		rename {<_GroupName>}:Channel_29 V101
		rename {<_GroupName>}:Channel_30 V102
		rename {<_GroupName>}:Channel_31 V103
		rename {<_GroupName>}:Channel_32 V104
		rename {<_GroupName>}:Channel_33 V105
		rename {<_GroupName>}:Channel_34 S106
		rename {<_GroupName>}:Channel_35 S107
		rename {<_GroupName>}:Channel_36 G108
		rename {<_GroupName>}:Channel_37 V109
		rename {<_GroupName>}:Channel_38 V110
		rename {<_GroupName>}:Channel_39 K1
		rename {<_GroupName>}:Channel_40 xx
		rename {<_GroupName>}:Channel_41 V201
		rename {<_GroupName>}:Channel_42 V202
		rename {<_GroupName>}:Channel_43 V203
		rename {<_GroupName>}:Channel_44 V204
		rename {<_GroupName>}:Channel_45 V205
		rename {<_GroupName>}:Channel_46 S206
		rename {<_GroupName>}:Channel_47 S207
		rename {<_GroupName>}:Channel_48 G208
		rename {<_GroupName>}:Channel_49 V209
		rename {<_GroupName>}:Channel_50 V210
		rename {<_GroupName>}:Channel_51 K2
		rename {<_GroupName>}:Channel_52 xx
		rename {<_GroupName>}:Channel_53 V301
		rename {<_GroupName>}:Channel_54 V302
		rename {<_GroupName>}:Channel_55 V303
		rename {<_GroupName>}:Channel_56 V304
		rename {<_GroupName>}:Channel_57 V305
		rename {<_GroupName>}:Channel_58 S306
		rename {<_GroupName>}:Channel_59 S307
		rename {<_GroupName>}:Channel_60 G308
		rename {<_GroupName>}:Channel_61 V309
		rename {<_GroupName>}:Channel_62 V310
		rename {<_GroupName>}:Channel_63 K3

		;Reserve-Kanäle löschen ("xx")
		delete {<_GroupName>}:xx

		;Einheiten setzten
		seteinheit( {<_GroupName>}:A1,"µm",1)
		seteinheit( {<_GroupName>}:A2,"µm",1)
		seteinheit( {<_GroupName>}:A3,"µm",1)
		seteinheit( {<_GroupName>}:A4,"µm",1)
		seteinheit( {<_GroupName>}:R1D,"µm",1)
		seteinheit( {<_GroupName>}:R1R,"µm",1)
		seteinheit( {<_GroupName>}:R2D,"µm",1)
		seteinheit( {<_GroupName>}:R2R,"µm",1)
		seteinheit( {<_GroupName>}:R3D,"µm",1)
		seteinheit( {<_GroupName>}:R3R,"µm",1)
		seteinheit( {<_GroupName>}:R1V,"µm",1)
		seteinheit( {<_GroupName>}:R1H,"µm",1)
		seteinheit( {<_GroupName>}:R2V,"µm",1)
		seteinheit( {<_GroupName>}:R2H,"µm",1)
		seteinheit( {<_GroupName>}:R3V,"µm",1)
		seteinheit( {<_GroupName>}:R3H,"µm",1)
		seteinheit( {<_GroupName>}:P1E,"bar",1)
		seteinheit( {<_GroupName>}:P2E,"bar",1)
		seteinheit( {<_GroupName>}:P3E,"bar",1)
		seteinheit( {<_GroupName>}:P3A,"bar",1)
		seteinheit( {<_GroupName>}:X1O,"%",1)
		seteinheit( {<_GroupName>}:X1U,"%",1)
		seteinheit( {<_GroupName>}:X2O,"%",1)
		seteinheit( {<_GroupName>}:X2U,"%",1)
		seteinheit( {<_GroupName>}:X3O,"%",1)
		seteinheit( {<_GroupName>}:X3U,"%",1)
		seteinheit( {<_GroupName>}:X4O,"%",1)
		seteinheit( {<_GroupName>}:X4U,"%",1)
		seteinheit( {<_GroupName>}:V101,"mm/s",1)
		seteinheit( {<_GroupName>}:V102,"mm/s",1)
		seteinheit( {<_GroupName>}:V103,"mm/s",1)
		seteinheit( {<_GroupName>}:V104,"mm/s",1)
		seteinheit( {<_GroupName>}:V105,"mm/s",1)
		seteinheit( {<_GroupName>}:S106,"µm",1)
		seteinheit( {<_GroupName>}:S107,"µm",1)
		seteinheit( {<_GroupName>}:G108,"m/s^2",1)
		seteinheit( {<_GroupName>}:V109,"mm/s",1)
		seteinheit( {<_GroupName>}:V110,"mm/s",1)
		seteinheit( {<_GroupName>}:K1,"µm",1)
		seteinheit( {<_GroupName>}:V201,"mm/s",1)
		seteinheit( {<_GroupName>}:V202,"mm/s",1)
		seteinheit( {<_GroupName>}:V203,"mm/s",1)
		seteinheit( {<_GroupName>}:V204,"mm/s",1)
		seteinheit( {<_GroupName>}:V205,"mm/s",1)
		seteinheit( {<_GroupName>}:S206,"µm",1)
		seteinheit( {<_GroupName>}:S207,"µm",1)
		seteinheit( {<_GroupName>}:G208,"m/s^2",1)
		seteinheit( {<_GroupName>}:V209,"mm/s",1)
		seteinheit( {<_GroupName>}:V210,"mm/s",1)
		seteinheit( {<_GroupName>}:K2,"µm",1)
		seteinheit( {<_GroupName>}:V301,"mm/s",1)
		seteinheit( {<_GroupName>}:V302,"mm/s",1)
		seteinheit( {<_GroupName>}:V303,"mm/s",1)
		seteinheit( {<_GroupName>}:V304,"mm/s",1)
		seteinheit( {<_GroupName>}:V305,"mm/s",1)
		seteinheit( {<_GroupName>}:S306,"µm",1)
		seteinheit( {<_GroupName>}:S307,"µm",1)
		seteinheit( {<_GroupName>}:G308,"m/s^2",1)
		seteinheit( {<_GroupName>}:V309,"mm/s",1)
		seteinheit( {<_GroupName>}:V310,"mm/s",1)
		seteinheit( {<_GroupName>}:K3,"µm",1)

		; Skalieren nach SÜS-Protokoll
		; (variabel sind i. A. die A- und R-Aufnehmer)
		{<_GroupName>}:A1={<_GroupName>}:A1/0.1489
		{<_GroupName>}:A2={<_GroupName>}:A2/0.1253
		{<_GroupName>}:A3={<_GroupName>}:A3/0.0919
		{<_GroupName>}:A4={<_GroupName>}:A4/0.1669
		{<_GroupName>}:R1D={<_GroupName>}:R1D/0.0062
		{<_GroupName>}:R1R={<_GroupName>}:R1R/0.0064
		{<_GroupName>}:R2D={<_GroupName>}:R2D/0.0064
		{<_GroupName>}:R2R={<_GroupName>}:R2R/0.0062
		{<_GroupName>}:R3D={<_GroupName>}:R3D/0.0062
		{<_GroupName>}:R3R={<_GroupName>}:R3R/0.0062
		{<_GroupName>}:R1V={<_GroupName>}:R1V/0.0162
		{<_GroupName>}:R1H={<_GroupName>}:R1H/0.0138
		{<_GroupName>}:R2V={<_GroupName>}:R2V/0.0133
		{<_GroupName>}:R2H={<_GroupName>}:R2H/0.0140
		{<_GroupName>}:R3V={<_GroupName>}:R3V/0.0154
		{<_GroupName>}:R3H={<_GroupName>}:R3H/0.0158
		{<_GroupName>}:P1E={<_GroupName>}:P1E/1
		{<_GroupName>}:P2E={<_GroupName>}:P2E/1
		{<_GroupName>}:P3E={<_GroupName>}:P3E/1
		{<_GroupName>}:P3A={<_GroupName>}:P3A/1
		{<_GroupName>}:X1O={<_GroupName>}:X1O/0.4
		{<_GroupName>}:X1U={<_GroupName>}:X1U/0.4
		{<_GroupName>}:X2O={<_GroupName>}:X2O/0.4
		{<_GroupName>}:X2U={<_GroupName>}:X2U/0.4
		{<_GroupName>}:X3O={<_GroupName>}:X3O/0.4
		{<_GroupName>}:X3U={<_GroupName>}:X3U/0.4
		{<_GroupName>}:X4O={<_GroupName>}:X4O/0.4
		{<_GroupName>}:X4U={<_GroupName>}:X4U/0.4
		{<_GroupName>}:V101={<_GroupName>}:V101/0.002
		{<_GroupName>}:V102={<_GroupName>}:V102/0.002
		{<_GroupName>}:V103={<_GroupName>}:V103/0.002
		{<_GroupName>}:V104={<_GroupName>}:V104/0.002
		{<_GroupName>}:V105={<_GroupName>}:V105/0.002
		{<_GroupName>}:S106={<_GroupName>}:S106/0.002
		{<_GroupName>}:S107={<_GroupName>}:S107/0.002
		{<_GroupName>}:G108={<_GroupName>}:G108/0.005
		{<_GroupName>}:V109={<_GroupName>}:V109/0.0125
		{<_GroupName>}:V110={<_GroupName>}:V110/0.0125
		{<_GroupName>}:K1={<_GroupName>}:K1/0.002
		{<_GroupName>}:V201={<_GroupName>}:V201/0.002
		{<_GroupName>}:V202={<_GroupName>}:V202/0.002
		{<_GroupName>}:V203={<_GroupName>}:V203/0.002
		{<_GroupName>}:V204={<_GroupName>}:V204/0.002
		{<_GroupName>}:V205={<_GroupName>}:V205/0.002
		{<_GroupName>}:S206={<_GroupName>}:S206/0.002
		{<_GroupName>}:S207={<_GroupName>}:S207/0.002
		{<_GroupName>}:G208={<_GroupName>}:G208/0.005
		{<_GroupName>}:V209={<_GroupName>}:V209/0.0125
		{<_GroupName>}:V210={<_GroupName>}:V210/0.0125
		{<_GroupName>}:K2={<_GroupName>}:K2/0.002
		{<_GroupName>}:V301={<_GroupName>}:V301/0.002
		{<_GroupName>}:V302={<_GroupName>}:V302/0.002
		{<_GroupName>}:V303={<_GroupName>}:V303/0.002
		{<_GroupName>}:V304={<_GroupName>}:V304/0.002
		{<_GroupName>}:V305={<_GroupName>}:V305/0.002
		{<_GroupName>}:S306={<_GroupName>}:S306/0.002
		{<_GroupName>}:S307={<_GroupName>}:S307/0.002
		{<_GroupName>}:G308={<_GroupName>}:G308/0.005
		{<_GroupName>}:V309={<_GroupName>}:V309/0.0125
		{<_GroupName>}:V310={<_GroupName>}:V310/0.0125
		{<_GroupName>}:K3={<_GroupName>}:K3/0.002


		If _Convert_to_displacement = 1
			<_GroupName>:V101 = int(<_GroupName>:V101)
			<_GroupName>:V102 = int(<_GroupName>:V102)
			<_GroupName>:V103 = int(<_GroupName>:V103)
			<_GroupName>:V104 = int(<_GroupName>:V104)
			<_GroupName>:V105 = int(<_GroupName>:V105)
			<_GroupName>:G108 = int(int(<_GroupName>:G108))
			<_GroupName>:V109 = int(<_GroupName>:V109)
			<_GroupName>:V110 = int(<_GroupName>:V110)
			seteinheit( {<_GroupName>}:V101,"µm",1)   ;Umrechnung fehlt (auch bei allen weiteren). Stattdessen "ConvertUnit"?
			seteinheit( {<_GroupName>}:V102,"µm",1)
			seteinheit( {<_GroupName>}:V103,"µm",1)
			seteinheit( {<_GroupName>}:V104,"µm",1)
			seteinheit( {<_GroupName>}:V105,"µm",1)
			seteinheit( {<_GroupName>}:G108,"µm",1)
			seteinheit( {<_GroupName>}:V109,"µm",1)
			seteinheit( {<_GroupName>}:V110,"µm",1)
			<_GroupName>:V201 = int(<_GroupName>:V201)
			<_GroupName>:V202 = int(<_GroupName>:V202)
			<_GroupName>:V203 = int(<_GroupName>:V203)
			<_GroupName>:V204 = int(<_GroupName>:V204)
			<_GroupName>:V205 = int(<_GroupName>:V205)
			<_GroupName>:G208 = int(int(<_GroupName>:G208))
			<_GroupName>:V209 = int(<_GroupName>:V209)
			<_GroupName>:V210 = int(<_GroupName>:V210)
			seteinheit( {<_GroupName>}:V201,"µm",1)
			seteinheit( {<_GroupName>}:V202,"µm",1)
			seteinheit( {<_GroupName>}:V203,"µm",1)
			seteinheit( {<_GroupName>}:V204,"µm",1)
			seteinheit( {<_GroupName>}:V205,"µm",1)
			seteinheit( {<_GroupName>}:G208,"µm",1)
			seteinheit( {<_GroupName>}:V209,"µm",1)
			seteinheit( {<_GroupName>}:V210,"µm",1)	
			<_GroupName>:V301 = int(<_GroupName>:V301)
			<_GroupName>:V302 = int(<_GroupName>:V302)
			<_GroupName>:V303 = int(<_GroupName>:V303)
			<_GroupName>:V304 = int(<_GroupName>:V304)
			<_GroupName>:V305 = int(<_GroupName>:V305)
			<_GroupName>:G308 = int(int(<_GroupName>:G308))
			<_GroupName>:V309 = int(<_GroupName>:V309)
			<_GroupName>:V310 = int(<_GroupName>:V310)
			seteinheit( {<_GroupName>}:V301,"µm",1)
			seteinheit( {<_GroupName>}:V302,"µm",1)
			seteinheit( {<_GroupName>}:V303,"µm",1)
			seteinheit( {<_GroupName>}:V304,"µm",1)
			seteinheit( {<_GroupName>}:V305,"µm",1)
			seteinheit( {<_GroupName>}:G308,"µm",1)
			seteinheit( {<_GroupName>}:V309,"µm",1)
			seteinheit( {<_GroupName>}:V310,"µm",1)	
	
			<_GroupName> = FiltHP(<_GroupName>,0,0,8,1)
			<_GroupName> = grenindex(<_GroupName>,10/xdel?(<_GroupName>),Lang?(<_GroupName>))

		Ende

		; STORE IMPORTED MEASUREMENT DATA
		step_ = "Store *.dat file"
		if GrKanalZahl?({<_GroupName>}) > 0
			sig = {<_GroupName>}:[1]
			MeasDate = ZeitInText((Zeit?(sig) + xoff?(sig)),3)
			sequenz date_to_string ; _Messdatum -> Date_string
	

			sicherungsfolder = assetfolder + "\ConditionFiles\"	; +"\" + _jjjj +"\" + _mm +"\" + _dd +"\"; neu 20190319
			_status = FsCreateDirectory(sicherungsfolder)
			wenn _status <>0
				_error = FsGetLastError()
			ende

			file1 ="CNT_RawData_" + Date_string + ".dat" 
			sicherungsfile_dat = sicherungsfolder + file1 ;
			sequenz store_dat_file
	
	
			_txt = raw_data_folder
			FileNameList_file = assetfolder +"\"+"ImportedRawFolders.txt"; 
			_fh = FileOpenASCII(FileNameList_file,2)
			_err = FileLineWrite(_fh,_txt,0)
			_err = FileClose(_fh)	
		ende

	ende
	
	if varexist?("ratio")
		cwselectmode("variable")
		cwselectwindow(file_ratio)
		CwAction("win.close")
	ende

	;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	; IMPORT PROCESS DATA
	;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	;assetfolder = "D:\Projekte\CNT_SUES"
	op_data_main_folder = assetfolder + "\RawProcess\"
	op_file_list = FsGetFileNames(op_data_main_folder,"",0,0,1)
	anz_op_files = TxArrayGetSize(op_file_list)

	for _k = 1 to anz_op_files
		file_ratio = floor(_k/anz_op_files*100) 
		seteinheit(file_ratio,"%",1)
		zeigen file_ratio
		op_file = op_file_list[_k]
	
		if FsFileExists(op_file) and txwo(op_file,".csv") > 0
			template = 3
			sequenz LoadCsvFile op_file template; -> OP_Data, 
			
			op_list_old = TxArrayCreate(0)
			
			if GrKanalZahl?(OP_Data) > 0
				anz_op = GrChanNum?(OP_Data)
				for _ijk = 1 to anz_op
					opname = GrChanName?(OP_Data,_ijk)
					op_list_old[_ijk] = opname
					opname_ = tteil(opname,1,9)
					OP_Data:{<opname_>} = OP_Data:[_ijk]
				end
				for _ijk = 1 to TxArrayGetSize(op_list_old)
					opname = op_list_old[_ijk]
					GrChanDel(OP_Data,opname)
				end
				MeasDate = ZeitInText((Zeit?(OP_Data:[1]) + xoff?(OP_Data:[1])),3)
				sequenz date_to_string ; _Messdatum -> Date_string
			
				sicherungsfolder = AssetFolder + "\ProcessFiles\"
				file1 ="ProcessData_"+Date_string
				sicherungsfile_csv = sicherungsfolder + File1 + ".csv";
				_erg = FsFileExists(sicherungsfile_csv)
				sequenz store_csv_parameter_file ; sicherungsfile, OP_Data
			ende
			
		ende
		; Move to \TransformedProcessFiles\
		_outfolder = assetfolder + "\TransformedProcessFiles\"
		_status = FsCreateDirectory(_outfolder)
		wenn _status <>0
			_error = FsGetLastError()
		ende
		_outfile = _outfolder + FsSplitPath(op_file,4)
		_erg = FsMoveFile(op_file,_outfile,2,0)
	ende


	; Aufräumen
	;delete *

	_erg = BoxMessage("Info:","CNT Measurement Data Import Done!","!1")
	;Ende Sequenz
ende

if varexist?("ratio")
	cwselectmode("variable")
	cwselectwindow(file_ratio)
	CwAction("win.close")
ende