;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
;Sequenz zur Berechnung der Harmonischen Distortion
;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
sequenz imc_logging "harmonic_distortion started"

_sig = PA1
sig_spec = PA2

; fl = 50 Hz
; fmax = 50*50 Hz = 2500 Hz
; df = 0.1 Hz
; fmax_soll = 2*fmax = 5000 Hz
; T = 1/df = 10s
; n = T*Fs, Fs >= 12.8 kHz
;_n = 4
;_window = 2
;_overlap = 50

v = leer;
;sig_spec = AmpSpectrumRMS_1(_sig,_n,_window,_overlap,1)

; problem with fmax, wenn fmax <= 2500 Hz bzw. freqline > 50 Hz -> 50 * 51 > 2500 Hz


wenn lang?(sig_spec)>0
	freqline = posi(sig_spec,max(gren(sig_spec,0,80)))
	_jj = 1
	SOLANGE _jj <= N_harm 
		_fu = _jj*freqline-xdel?(sig_spec)
		_fo = _jj*freqline+xdel?(sig_spec)
		v = binde(v,max(gren(sig_spec,_fu,_fo)))
		_jj = _jj + 1
	ENDE
	Harmonics_50 = v
	
	wenn 0
		hdall = sqrt(sum(v2^2,..,v50^2)/v1^2*100; delta = 1, start = 2, end = 50
		hdpos = sqrt(sum(v4^2,v7^2,v10^2,...)/v1^2*100; delta = 3, start = 4, end = 50
		hdneg = sqrt(sum(v2^2,v5^2,v8^2,...)/v1^2*100; delta = 3, start = 2, end = 50
		hdzero = sqrt(sum(v3^2,v6^2,v9^2,...)/v1^2*100; delta = 3, start = 3, end = 50
		hdodd = sqrt(sum(v3^2,v5^2,v7^2,...)/v1^2*100; delta = 2, start = 3, end = 50
		hdeven = sqrt(sum(v2^2,v4^2,v6^2,...)/v1^2*100; delta = 2, start = 2, end = 50
	ende
	
	_jj = 2
	v_thdall = 0
	SOLANGE _jj <= N_harm 
		v_thdall = v_thdall + v[_jj]^2
		_jj = _jj + 1
	ENDE
	hdall = sqrt(v_thdall)/v[1]^2*100; 
	_jj = 4
	v_hdpos = 0
	SOLANGE _jj <= N_harm 
		v_hdpos = v_hdpos + v[_jj]^2
		_jj = _jj + 3
	ENDE
	hdpos = sqrt(v_hdpos)/v[1]^2*100; 
	_jj = 2
	v_hdneg = 0
	SOLANGE _jj <= N_harm 
		v_hdneg = v_hdneg + v[_jj]^2
		_jj = _jj + 3
	ENDE
	hdneg = sqrt(v_hdneg)/v[1]^2*100; 
	_jj = 3
	v_hdzero = 0
	SOLANGE _jj <= N_harm 
		v_hdzero = v_hdzero + v[_jj]^2
		_jj = _jj + 3
	ENDE
	hdzero = sqrt(v_hdzero)/v[1]^2*100; 
	_jj = 3
	v_hdodd = 0
	SOLANGE _jj <= N_harm 
		v_hdodd = v_hdodd + v[_jj]^2
		_jj = _jj + 2
	ENDE
	hdodd = sqrt(v_hdodd)/v[1]^2*100; 
	_jj = 2
	v_hdeven = 0
	SOLANGE _jj <= N_harm 
		v_hdeven = v_hdeven + v[_jj]^2
		_jj = _jj + 2
	ENDE
	hdeven = sqrt(v_hdeven)/v[1]^2*100; 
ende
